events {}

http {
    server {
        listen 80;
        
        # Catalog frontend
        location /catalog/ {
            rewrite ^/catalog(/.*)$ $1 break;
            proxy_pass http://catalog_frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # Optional: fallback for React Router
            error_page 404 =200 /catalog/index.html;
        }

        # Payment frontend
        location /payment {
            proxy_pass http://payment_frontend_service:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Order service
        location /order {
            proxy_pass http://order_service:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Authentication frontend
        location /auth {
            proxy_pass http://auth_frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Backend services (you can add these as needed)
        location /payment-api {
            proxy_pass http://payment_backend_service:8000;
        }
        location /order-api {
            proxy_pass http://order_service:8000;
        }
        location /catalog-api {
            proxy_pass http://catalog_backend:8000;
        }
        location /auth-api {
            proxy_pass http://auth_backend:8000;
        }
    }
}
